<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">

<sql id='writer'>
writer in (select userid from member where name like '%'|| #{keyword} ||'%')
</sql>

<!-- 검색조건 -->
<sql id='where_search'>
<choose>
	<when test='search=="tandc"'> <!--제목+내용  -->
	where title like '%'|| #{keyword} ||'%'
	or content like '%'|| #{keyword} ||'%'
	</when>
	
	<when test='search=="all"'>
	where title like '%'|| #{keyword} ||'%'
	or content like '%'|| #{keyword} ||'%'
<!-- 	or writer in (select userid from member where name like '%'|| #{keyword} ||'%') -->
	or <include refid="writer"/>
	</when>
	<when test='search=="title" or search=="content"'>
	where ${search} like '%'|| #{keyword} ||'%'
	</when>
	<when test='search=="writer"'>
	where <include refid="writer"/>
<!-- 	where writer in (select userid from member where name like '%'|| #{keyword} ||'%') -->
	</when>	 
</choose>

</sql>

<!-- 공지글 건수 조회 -->
<select id='count' resultType='integer'>
select count(*) from notice <include refid="where_search"/>
</select>


<!-- 공지글 전체목록 조회 -->
<select id="list" resultType='notice.NoticeVO'>
select * 
from (select row_number() over(order by n.root, step desc) no, n.*, name 
      from notice n left outer join member m on n.writer = m.userid
      <include refid="where_search"/>)
where no between #{beginList} and #{endList}
order by no desc
<!--  
select row_number() over(order by n.id) no, n.*, name 
from notice n left outer join member m on n.writer = m.userid
order by no desc
-->
</select>

<!-- 조회수증가처리 -->
<update id="read">
update notice set readcnt = readcnt + 1 where id = #{id}
</update>

<!-- 선택한 공지글조회 -->
<select id='info' resultType='notice.NoticeVO'>
select n.*, name
from notice n left outer join member m on n.writer = m.userid
where n.id = #{id}
</select>

<!-- 공지글삭제 -->
<delete id='delete'>
delete from notice where id = #{id}
</delete>

<!-- 공지글 답글신규저장 -->
<insert id='reply_insert'>
<!-- 원글의root와 같고 step이 원글의 step보다 큰 글은 먼저 step +1 을 한다 -->
<![CDATA[ 
{
call declare 
begin
	update notice set step = step + 1 
	where root = #{root} and step > #{step};
	
	insert into notice(root, step, indent, title, content, writer, filename, filepath)
	values ( #{root}, #{step}+1, #{indent}+1, #{title}, #{content}, #{writer}
			, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR});
end
}
]]>
</insert>

<!-- 공지글신규저장 -->
<insert id="insert">
insert into notice(title, content, writer, filename, filepath)
values (#{title}, #{content}, #{writer}
		, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR})
</insert>

<!-- 공지글변경저장 -->
<update id='update'>
update notice set title = #{title}, content = #{content}
				, filename = #{filename, jdbcType=VARCHAR}
				, filepath = #{filepath, jdbcType=VARCHAR}
where id = #{id}
</update>
</mapper>