필요한 라이브러리 검색: mvnrepository.com 

DB연결에 필요한 라이브러리
		
		<!-- 스프링에서 jdbc 사용하기 위한 라이브러리 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>5.3.18</version>
		</dependency>
			
		<!-- 오라클용 ojdbc 라이브러리 -->
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ojdbc8</artifactId>
		    <version>21.5.0.0</version>
		</dependency>
				
		<!-- DBCP 라이브러리 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-dbcp2</artifactId>
		    <version>2.9.0</version>
		</dependency>
		
Mybatis 프레임웤을 사용하기 위한 라이브러리

		<!-- 마이바티스 라이브러리 -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.5.10</version>
		</dependency>
				
		<!-- spring에서 마이바티스를 사용하도록 연결하는 라이브러리 -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>2.0.7</version>
		</dependency>
		

데이터객체(VO,DTO)에 getter,setter 자동생성 라이브러리
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.24</version>
		    <scope>provided</scope>
		</dependency>
		
		<!-- 화면템플릿을 위한 라이브러리 -->						
		<!-- https://mvnrepository.com/artifact/org.apache.tiles/tiles-jsp -->
		<dependency>
		    <groupId>org.apache.tiles</groupId>
		    <artifactId>tiles-jsp</artifactId>
		    <version>3.0.8</version>
		</dependency>
		
				
		
화면 template 지정 : tiles 사용
http://apache.org   ->  tiles 검색: Home - Apache Tiles - Framework 클릭
-> 

											
공지글관리 
create table notice (
id        number, 				/*PK*/
title     varchar2(300), 		/*제목*/
content   varchar2(4000), 		/*내용*/
writer    varchar2(50),			/*작성자의 id*/
writedate date default sysdate, /*작성일자*/
readcnt   number default 0,     /*조회수*/
constraint notice_id_pk primary key(id),
constraint notice_writer_fk foreign key(writer) references member(userid)
);		

	
notice 테이블의 pk인 id 컬럼에 적용할 시퀀스
create sequence seq_notice
start with 1 increment by 1 nocache;		

트리거 없이 PK컬럼에 시퀀스값을 적용해서 insert 하기
insert into notice(id, title, content, writer)
values (seq_notice.nextval, '테스트 공지글', '테스트용 공지글입니다', 'admin');
		
notice 테이블에 데이터행 삽입저장시 pk인 id컬럼에 시퀀스값 자동적용시킬 트리거
create or replace trigger trg_notice
	before insert on notice
	for each row
begin
	select seq_notice.nextval into :new.id from dual;
end;
/

트리거를 통해  PK컬럼에 시퀀스값 자동적용된 경우 insert 하기
insert into notice(title, content, writer)
values ('세번째 공지글', '세번째 공지글입니다', 'admin2');
		
update notice 
set title = #{title}, content = #{content}
where id = #{id}
		
		
		
암호화에 사용할 salt 컬럼 추가
alter table member add ( salt varchar2(300) );

salt: 비밀번호를 해시 처리하는 단방향 함수의 추가 입력에 사용되는 랜덤값
회원가입시 비밀번호를 암호화하고, 암호화에 사용한 salt 와 암호화된 비밀번호를 저장하도록 한다
 
       암호화           복호화
manager -> afalgfhag -> manager
		
		
		
		
		
		
		